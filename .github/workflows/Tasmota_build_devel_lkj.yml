name: Build_development_lkj

on:
  workflow_dispatch:  # Manually start a workflow
  push:
    branches: lkj
    paths-ignore:
    - '.github/**' # Ignore changes towards the .github directory
    - '**.md' # Do no build if *.md files changes

# Ensures that only one deploy task per branch/environment will run at a time.
concurrency:
  group: environment-${{ github.ref }}
  cancel-in-progress: true

jobs:
  base-images:
    runs-on: ubuntu-latest
    if: github.repository == 'arendst/Tasmota'
    continue-on-error: true
    strategy:
      matrix:
        variant:
          - tasmota
          - tasmota4M
          - tasmota-minimal
          - tasmota-display
          - tasmota-ir
          - tasmota-knx
          - tasmota-lite
          - tasmota-sensors
          - tasmota-zbbridge
          - tasmota-zigbee
          - tasmota32
          - tasmota32-webcam
          - tasmota32-bluetooth
          - tasmota32-display
          - tasmota32-ir
          - tasmota32-lvgl
          - tasmota32c3
          - tasmota32solo1
    steps:
      - uses: actions/checkout@v2
        with:
          ref: development
      - name: Set up Python
        uses: actions/setup-python@v1
      - name: Install dependencies
        run: |
          pip install -U platformio
      - name: Run PlatformIO
        run: platformio run -e ${{ matrix.variant }}
      - uses: actions/upload-artifact@v2
        with:
          name: firmware
          path: ./build_output

  language-images:
    runs-on: ubuntu-latest
    if: github.repository == 'arendst/Tasmota'
    continue-on-error: true
    strategy:
      matrix:
        variant: [ tasmota, tasmota32 ]
        language: [ AF, BG, BR, CN, CZ, DE, ES, FR, FY, GR, HE, HU, IT, KO, NL, PL, PT, RO, RU, SE, SK, TR, TW, UK, VN ]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: development
      - name: Set up Python
        uses: actions/setup-python@v1
      - name: Install dependencies
        run: |
          pip install -U platformio
      - name: Run PlatformIO
        run: platformio run -e ${{ matrix.variant }}-${{ matrix.language }}
      - uses: actions/upload-artifact@v2
        with:
          name: firmware
          path: ./build_output
